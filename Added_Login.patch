Index: src/main/java/servlets/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/servlets/Login.java	(revision )
+++ src/main/java/servlets/Login.java	(revision )
@@ -0,0 +1,101 @@
+package servlets;
+
+
+import java.io.IOException;
+
+
+
+import javax.servlet.RequestDispatcher;
+import javax.servlet.ServletConfig;
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServlet;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import javax.servlet.http.HttpSession;
+
+import TeaToMe.LoggedIn;
+import TeaToMe.models.*;
+
+
+public class Login extends HttpServlet {
+
+    public void init(ServletConfig config) throws ServletException {
+        // TODO Auto-generated method stub
+    }
+
+
+    @Override
+    protected void doPost(HttpServletRequest request, HttpServletResponse response)
+            throws ServletException, IOException {
+        
+        String username=request.getParameter("username");
+        String password=request.getParameter("password");
+
+        User us=new User();
+       // us.setCluster(cluster);
+
+        String first_name=us.First_name(username);
+        String last_name =us.Last_name(username);
+        String staff_ID =us.Staff_ID(username);
+        String BranchID =us.BranchID(username);
+        String skill =us.Skill(username);
+        int Pos =us.Position(username);
+        
+
+        boolean isValid=us.IsValidUser(username, password);
+        HttpSession session=request.getSession();
+        System.out.println("Session in servlet "+session);
+        if (isValid){
+            LoggedIn lg= new LoggedIn();
+            lg.setLogedin();
+            lg.setUsername(username);
+            lg.setfirst_name(first_name);
+            lg.setlast_name(last_name);
+            lg.setstaff_ID(staff_ID);
+            lg.setBranch(BranchID);
+            lg.setSkills(skill);
+            lg.setPosition(Pos);
+    
+            //request.setAttribute("LoggedIn", lg);
+            
+            session.setAttribute("LoggedIn", lg);
+            System.out.println("Session in servlet "+session);
+            RequestDispatcher rd=null;
+            switch (Pos) {
+            case 1:
+            	 rd=request.getRequestDispatcher("staff.jsp");
+                break;
+            case 2:
+            	 rd=request.getRequestDispatcher("manager.jsp");
+                break;
+            case 3:
+            	 rd=request.getRequestDispatcher("CEO.jsp");
+                break;
+            case 4:
+           	     rd=request.getRequestDispatcher("ET.jsp");
+               break;    
+            default:
+            	 rd=request.getRequestDispatcher("login.jsp");   
+        }
+            
+	    rd.forward(request,response);
+	  ///////////////////////////////////right??????????????????????????????????????????????/
+	  
+            
+        }else{
+            response.sendRedirect("/instagrim/login.jsp");
+        }
+        
+    }
+
+    /**
+     * Returns a short description of the servlet.
+     *
+     * @return a String containing servlet description
+     */
+    @Override
+    public String getServletInfo() {
+        return "Short description";
+    }// </editor-fold>
+
+}
Index: src/main/java/stores/LoggedIn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/stores/LoggedIn.java	(revision )
+++ src/main/java/stores/LoggedIn.java	(revision )
@@ -0,0 +1,77 @@
+package stores;
+
+public class LoggedIn {
+    boolean logedin=false;
+    String Username=null;
+    String first_name=null;
+    String last_name=null;
+    String staff_ID=null;
+    String Branch=null;
+    String skill=null;
+    
+    int position;
+    
+    public void LogedIn(){
+        
+    }
+    
+    public void setUsername(String name){
+        this.Username=name;
+    }
+    public String getUsername(){
+        return Username;
+    }
+    public void setLogedin(){
+        logedin=true;
+    }
+    public void setLogedout(){
+        logedin=false;
+    }
+    public void setfirst_name(String name){
+        this.first_name=name;
+    }
+    public String getfirst_name(){
+        return first_name;
+    }
+    public void setlast_name(String name){
+        this.last_name=name;
+    }
+    public String getlast_name(){
+        return last_name;
+    }
+    public void setBranch(String branch){
+        this.Branch=branch;
+    }
+    public String getBranch(){
+        return Branch;
+    }
+    public void setstaff_ID(String ID){
+        this.staff_ID=ID;
+    }
+    public String getstaff_ID(){
+        return staff_ID;
+    }
+    public void setPosition(int pos){
+        this.position=pos;
+    }
+    public int getPosition(){
+        return position;
+    }
+    public void setSkills(String ski){
+        this.skill=ski;
+    }
+    public String getSkills(){
+        return skill;
+    }
+    public void setLoginState(boolean logedin){
+        this.logedin=logedin;
+    }
+    public boolean getlogedin(){
+        return logedin;
+    }
+
+	public void setPosition1(int pos) {
+		// TODO Auto-generated method stub
+		
+	}///////////////for what?
+}
Index: src/main/java/models/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/models/User.java	(revision )
+++ src/main/java/models/User.java	(revision )
@@ -0,0 +1,271 @@
+package models;
+
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.UnsupportedEncodingException;
+import java.security.NoSuchAlgorithmException;
+import java.sql.*;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpSession;
+
+public class User {
+	  private static Connection connect = null;
+	  //private Statement statement = null;
+	  private PreparedStatement preparedStatement = null;
+	  private ResultSet resultSet = null;
+	//Cluster cluster;
+    public User(){
+        
+    }
+
+    public boolean IsValidUser(String username, String Password){
+
+        AeSimpleSHA1 sha1handler=  new AeSimpleSHA1();
+        String EncodedPassword=null;
+        try {
+            EncodedPassword= sha1handler.SHA1(Password);
+        }catch (UnsupportedEncodingException | NoSuchAlgorithmException et){
+            System.out.println("Can't check your password");
+            return false;
+        }
+        try{
+        connect = DriverManager
+                .getConnection("jdbc:mysql://localhost/feedback?"
+                    + "user=sqluser&password=sqluserpw");///////////////////////what's this?
+        preparedStatement  = connect.prepareStatement("select password from userprofiles where login =?");
+        preparedStatement.setString(1, username);
+        resultSet = preparedStatement.executeQuery();
+       
+        	while (resultSet.next()){  
+               
+                String StoredPass = resultSet.getString("password");
+                if (StoredPass.compareTo(EncodedPassword) == 0)
+                    return true;
+            }
+        }catch (Exception ex) {
+            System.out.println(ex);
+        } finally {
+            try {
+            	resultSet.close();
+            	preparedStatement.close();
+                connect.close();
+            } catch (SQLException e) {
+                System.out.println(e);
+            }
+        }
+             
+    }
+        
+    
+    
+  /*  public ResultSet readDataBase(String query) throws Exception {
+        try {
+            Class.forName("com.mysql.jdbc.Driver");
+            connect = DriverManager
+                    .getConnection("jdbc:mysql://localhost/feedback?"
+                            + "user=sqluser&password=sqluserpw");
+           // preparedStatement  = connect.prepareStatement(query);
+            
+            //resultSet = preparedStatement.executeQuery(query);
+            
+            //return resultSet;
+            
+          statement = connect.createStatement();
+          return statement.executeQuery(query);
+
+        } catch (Exception e) {
+            throw e;
+        } finally {
+        	resultSet.close();
+        	preparedStatement.close();
+            connect.close();
+        }
+
+    }*/
+    
+
+ 
+    public String First_name(String username)
+    {
+    	String Storedname = null;
+    	 try{
+    	        connect = DriverManager
+    	                .getConnection("jdbc:mysql://localhost/feedback?"
+    	                    + "user=sqluser&password=sqluserpw");
+    	        preparedStatement  = connect.prepareStatement("select first_name from userprofiles where login =?");
+    	        preparedStatement.setString(1, username);
+    	        resultSet = preparedStatement.executeQuery();
+    	       
+    	        	while (resultSet.next()){  
+    	               
+    	        		Storedname = resultSet.getString("first_name");
+    	            }
+    	        	
+    	        }catch (Exception ex) {
+    	            System.out.println(ex);
+    	        }finally {
+            try {
+            	resultSet.close();
+            	preparedStatement.close();
+                connect.close();
+            } catch (SQLException e) {
+                System.out.println(e);
+            }
+        }
+    	 return Storedname;
+    }
+    
+    public String Last_name(String username)
+    {
+    	String Storedname = null;
+   	 try{
+   	        connect = DriverManager
+   	                .getConnection("jdbc:mysql://localhost/feedback?"
+   	                    + "user=sqluser&password=sqluserpw");///////////////////////what's this?
+   	        preparedStatement  = connect.prepareStatement("select last_name from userprofiles where login =?");
+   	        preparedStatement.setString(1, username);
+   	        resultSet = preparedStatement.executeQuery();
+   	       
+   	        	while (resultSet.next()){  ///////////////is while right?
+   	               
+   	        		Storedname = resultSet.getString("last_name");
+   	            }
+   	        	
+   	        }catch (Exception ex) {
+   	            System.out.println(ex);
+   	        }finally {
+   	            try {
+   	            	resultSet.close();
+   	            	preparedStatement.close();
+   	                connect.close();
+   	            } catch (SQLException e) {
+   	                System.out.println(e);
+   	            }
+   	        }
+   	return Storedname;
+       }
+    public String Staff_ID(String username)
+    {
+    	String Storedname = null;
+   	 try{
+   	        connect = DriverManager
+   	                .getConnection("jdbc:mysql://localhost/feedback?"
+   	                    + "user=sqluser&password=sqluserpw");///////////////////////what's this?
+   	        preparedStatement  = connect.prepareStatement("select staff_ID from userprofiles where login =?");
+   	        preparedStatement.setString(1, username);
+   	        resultSet = preparedStatement.executeQuery();
+   	       
+   	        	while (resultSet.next()){  ///////////////is while right?
+   	               
+   	        		Storedname = resultSet.getString("staff_ID");
+   	            }
+   	        	
+   	        }catch (Exception ex) {
+   	            System.out.println(ex);
+   	        }finally {
+   	            try {
+   	            	resultSet.close();
+   	            	preparedStatement.close();
+   	                connect.close();
+   	            } catch (SQLException e) {
+   	                System.out.println(e);
+   	            }
+   	        }
+   	return Storedname;
+       }
+    public String BranchID(String username)
+    {
+    	String Storedname = null;
+   	 try{
+   	        connect = DriverManager
+   	                .getConnection("jdbc:mysql://localhost/feedback?"
+   	                    + "user=sqluser&password=sqluserpw");///////////////////////what's this?
+   	        preparedStatement  = connect.prepareStatement("select BranchID from userprofiles where login =?");
+   	        preparedStatement.setString(1, username);
+   	        resultSet = preparedStatement.executeQuery();
+   	       
+   	        	while (resultSet.next()){  ///////////////is while right?
+   	               
+   	        		Storedname = resultSet.getString("BranchID");
+   	            }
+   	        	
+   	        }catch (Exception ex) {
+   	            System.out.println(ex);
+   	        }finally {
+   	            try {
+   	            	resultSet.close();
+   	            	preparedStatement.close();
+   	                connect.close();
+   	            } catch (SQLException e) {
+   	                System.out.println(e);
+   	            }
+   	        }
+   	return Storedname;
+       }
+    public String Skill(String username)
+    {
+    	String Storedname = null;
+   	 try{
+   	        connect = DriverManager
+   	                .getConnection("jdbc:mysql://localhost/feedback?"
+   	                    + "user=sqluser&password=sqluserpw");///////////////////////what's this?
+   	        preparedStatement  = connect.prepareStatement("select skills from userprofiles where login =?");
+   	        preparedStatement.setString(1, username);
+   	        resultSet = preparedStatement.executeQuery();
+   	       
+   	        	while (resultSet.next()){  ///////////////is while right?
+   	               
+   	        		Storedname = resultSet.getString("skills");
+   	            }
+   	        	
+   	        }catch (Exception ex) {
+   	            System.out.println(ex);
+   	        }finally {
+   	            try {
+   	            	resultSet.close();
+   	            	preparedStatement.close();
+   	                connect.close();
+   	            } catch (SQLException e) {
+   	                System.out.println(e);
+   	            }
+   	        }
+	return Storedname;
+   	
+       }
+    public int Position(String username)
+    {
+    	 int Storedpos=0;
+      	 try{
+      	        connect = DriverManager
+      	                .getConnection("jdbc:mysql://localhost/feedback?"
+      	                    + "user=sqluser&password=sqluserpw");///////////////////////what's this?
+      	        preparedStatement  = connect.prepareStatement("select position from userprofiles where login =?");
+      	        preparedStatement.setString(1, username);
+      	        resultSet = preparedStatement.executeQuery();
+      	       
+      	        	while (resultSet.next()){  ///////////////is while right?
+      	               
+      	        		Storedpos = resultSet.getInt("position");
+      	            }
+      	        
+      	        }catch (Exception ex) {
+      	            System.out.println(ex);
+      	        }finally {
+      	            try {
+      	            	resultSet.close();
+      	            	preparedStatement.close();
+      	                connect.close();
+      	            } catch (SQLException e) {
+      	                System.out.println(e);
+      	            }
+      	        }
+		return Storedpos;
+      	
+          }
+    
+   
+    
+}
